/*
 * This file is generated by jOOQ.
 */
package com.shf.jooq.records;


import com.shf.jooq.tables.Sample;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleRecord extends TableRecordImpl<SampleRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>demo.sample.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>demo.sample.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>demo.sample.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>demo.sample.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>demo.sample.city</code>.
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>demo.sample.city</code>.
     */
    public String getCity() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Sample.SAMPLE.NAME;
    }

    @Override
    public Field<String> field2() {
        return Sample.SAMPLE.ADDRESS;
    }

    @Override
    public Field<String> field3() {
        return Sample.SAMPLE.CITY;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public String component3() {
        return getCity();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public String value3() {
        return getCity();
    }

    @Override
    public SampleRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public SampleRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public SampleRecord value3(String value) {
        setCity(value);
        return this;
    }

    @Override
    public SampleRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SampleRecord
     */
    public SampleRecord() {
        super(Sample.SAMPLE);
    }

    /**
     * Create a detached, initialised SampleRecord
     */
    public SampleRecord(String name, String address, String city) {
        super(Sample.SAMPLE);

        setName(name);
        setAddress(address);
        setCity(city);
    }
}
